#!/usr/bin/expect --
# ------------------------------------------------------------
# download
# Adam Wead
# Rock and Roll Hall of Fame and Museum
#
# Description:
#   Logs into Innopac server and downloads our marc search
#   file to our ftp server. 
# ------------------------------------------------------------

# ------------------------------------------------------------
#
# Config
#
# ------------------------------------------------------------

# Include our shared config file
source "config"

# Determine the name of the record list we want to download
if { $argv == "" } {
  set recordlist "axw-search-2"
} else {
  set recordlist [lindex $argv 0]
}

# ------------------------------------------------------------
#
# Main
#
# ------------------------------------------------------------

# Start the SSH session, 5 possible responses:
#   Option 1 - No SSH connection available
#   Option 2 - Unknown host
#   Option 3 - Not a familiar host
#   Option 4 - Bad username
#   Option 5 - Good connection

spawn /usr/bin/ssh -l $un $hostip

expect {
  "Secure connection to * refused" exit
  "no address associated with name" exit
  "The authenticity of host*can't be established*Are you sure you want
  to continue connecting" exit
  "Permission denied" exit
  "password: "
}

# Good username, now what about the pw?
#  Option 1 - bad pw
#  Option 2 - good username
send "$pw\r"
expect "Permission denied, please try again" {
  send "\r\r"
  exit
} "Choose one (S,D,C,M,*" {
  # Keep on going
}

# From the main menu, output search
# results to file
send "a"
expect "Choose one"
send "m"
expect "your initials"
send "$initials\r"
expect "your password"
send "$ipwd\r"
expect "Choose one (E,B,L,A,*"
send "d"
expect "Choose one"
send "c"
expect "Enter name of file"
send "rhla-daily\r"
expect "File rhla-daily.out already exists!  Overwrite it?" {
  send "y"
  expect "overwrite it?"
  send "y"
  expect "Choose one"
} "Choose one"
send "b"
expect "Choose one"
# Cycle through the pages of results until we see ours
send "f"
set timeout 1
while {1} {
  expect -re "(\[0-9]+) > $recordlist" {
    send $expect_out(1,string)
    break
  }
  send "f"
}
expect "Choose one"
send "s"
#expect "Are you sure?" {
#  send "y"
#}
set timeout -1
#while {1} {
#  expect "Are you sure?" {
#    send "y"
#  }
#}
expect "Choose one"
set timeout 10

# quit out and send file via FTP
send "q"
expect "Press <SPACE> to continue"
send " "
expect "Choose one"
send "q"
expect "Press <SPACE> to continue"
send " "
#expect "Choose one"
# Cycle through lists of filenames 
#send "f"
set timeout 1
while {1} {
  expect -re "(\[0-9]+) > rhla-daily.out" {
    set filenumber $expect_out(1,string)
    break
  }
  send "f"
}
set timeout 10
expect "Choose one"
send "s"
expect "Enter file number"
send "$filenumber"
expect "Choose one"
#send "+"
#expect "Choose one"
send "e"
expect "Enter host name"
send "$ftphost\r"
expect "Username"
send "$ftpuser\r"
send "$ftppass\r"
expect "Choose one"
send "t"
expect "rhla-daily.out"
send "\r"
set timeout 100
expect "Transfer complete"
set timeout 10
send "c"
expect "Choose one"
send "q"
expect "Press <SPACE>"
send " "
expect "Choose one"
send "q"
expect "Choose one"
send "q"
expect "Choose one"
send "q"
expect "Choose one"
send "q"
exit 0

